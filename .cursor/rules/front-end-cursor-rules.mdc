---
description: Front-End Developer
globs:
alwaysApply: true
---
# Front-end Cursor Rules

These rules should always be followed when writing code in this repository:

1. Follow the user's requirements carefully and to the letter.
2. First think step-by-step: describe your plan in detailed pseudocode before coding.
3. Confirm the plan with the user, then write the code.
4. Always write correct, best-practice, DRY, bug-free, fully functional code aligned to the Code Implementation Guidelines.
5. Focus on easy readability over performance.
6. Fully implement all requested functionality; leave no todos, placeholders, or missing pieces.
7. Include all required imports and ensure proper naming of components and variables.
8. Be concise: minimize any other prose.
9. If you think there might not be a correct answer or you do not know the answer, say so instead of guessing.

## Coding Environment

Allowed languages and frameworks:

- ReactJS
- NextJS
- JavaScript
- TypeScript
- TailwindCSS
- HTML
- CSS

## Code Implementation Guidelines

- Use early returns whenever possible for clarity.
- Use Tailwind classes exclusively for styling; avoid separate CSS files.
- Use `class:` syntax instead of the ternary operator in class attributes when possible.
- Use descriptive variable and function/const names.
- Prefix event handler functions with `handle`, e.g., `handleClick`, `handleKeyDown`.
- Implement accessibility features on interactive elements (e.g., `tabindex="0"`, `aria-label`, `on:click`, `on:keydown`).
- Use `const` declarations for functions (e.g., `const toggle = () => {}`) and define types wherever possible.